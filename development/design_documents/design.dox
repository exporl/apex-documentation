/**

@page Apex design document


@section sec_style Code style

K&R style
4 space indent

@section sec_naming Class/method naming

Class: ClassName
Object: objectName
member: m_member
parameter: p_parameter
getter: property()
setter: setProperty(...)

We are using the same conventions as the Qt library

@section sec_namespaces Namespaces

data
parser
writer
run

@section sec_separation Separation of data and code

The experiment file (XML) is parsed into datastructures. All datastructures
are in the data namespace and are not to be modified during the experiment.

The parsing is done by a separate parser per datastructure. All parsers are
in the parser namespace.

A datastructure can be written back to disk using a writer. All writers are
in the writer namespace.

The actual experiment is performed by runners or rundelegates. They use data
from the datastructures to perform the experiment.

An entire experiment is stored in ExperimentData and parsed by
ExperimentConfigFileParser. It is ran by ExperimentRunDelegate.

ApexControl arranges the general flow of an experiment and it not supposed to
contain experiment-specific information.


@section sec_modules Modules

outputdevices   (soundcard, l34)
devices



@section sec_calibration Calibration

All hardware setup names are stored in a QSettings file and can be edited
from the gui.

If an experiment file has a <calibration> section, it is parsed into a
CalibrationData object.

The calibration dialog takes a CalibrationData object and returns a
Calibration object containing the new calibration. It can also take a
Calibration object for its default settings.

A CalibrationData object can be written to a QSettings file.

The current hardware setup is kept in the hardware setup QSettings file.
It it changed by selecting another hardware setup in the calibration dialog or
by selecting another hardware setup from the calibration menu.


**/
